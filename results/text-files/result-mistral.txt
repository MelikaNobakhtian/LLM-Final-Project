SELECT Sailors.sname FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.bid = 103;
SELECT Sailors.sname FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.bname = 'Melon';
SELECT AVG(Sales.units_sold) / 1000000 AS average_millions_sold FROM Sales JOIN Games ON Sales.game_id = Games.id JOIN Players ON Games.player_id = Players.id WHERE Players.position = 'Guard';
SELECT c2.CollectionName FROM Collections c1 JOIN CollectionLinks cl ON c1.CollectionID = cl.CollectionID1 JOIN Collections c2 ON cl.CollectionID2 = c2.CollectionID WHERE c1.CollectionName = 'Best';
SELECT layer_type_code, COUNT(*) as count FROM analytical_layer GROUP BY layer_type_code ORDER BY count DESC LIMIT 1;
SELECT nationality, COUNT(*) as number_of_customers FROM customers GROUP BY nationality;
SELECT c.id, c.name, c.phone, c.email FROM Customers c JOIN ( SELECT customer_id, COUNT(*) as order_count FROM Orders GROUP BY customer_id ORDER BY order_count DESC LIMIT 1 ) o ON c.id = o.customer_id;
SELECT name FROM staff WHERE age > (SELECT AVG(age) FROM staff);
WITH InvoicesWithPaymentCounts AS ( SELECT i.invoice_id, COUNT(p.payment_id) AS payment_count FROM invoices i LEFT JOIN payments p ON i.invoice_id = p.invoice_id GROUP BY i.invoice_id ), MaxPayments AS ( SELECT invoice_id, MAX(payment_count) AS max_payment_count FROM InvoicesWithPaymentCounts ) SELECT i.invoice_id, i.status_code, i.details FROM invoices i INNER JOIN MaxPayments mp ON i.invoice_id = mp.invoice_id INNER JOIN InvoicesWithPaymentCounts ipc ON i.invoice_id = ipc.invoice_id AND ipc.payment_count = mp.max_payment_count;
SELECT product_name FROM Products WHERE price > (SELECT AVG(price) FROM Products);
SELECT SUM(p.weight) as total_weight FROM package p JOIN shipment s ON p.shipment_id = s.shipment_id JOIN employee e ON s.employee_id = e.employee_id JOIN customer c ON p.sender_customer_id = c.customer_id WHERE c.name = 'Leo Wong';
SELECT pilots.name, pilots.age FROM pilots JOIN pilot_planes ON pilots.id = pilot_planes.pilot_id JOIN planes ON pilot_planes.plane_id = planes.id WHERE (planes.name = 'Piper Cub' AND pilots.age > 35) OR (planes.name = 'F-14 Fighter' AND pilots.age < 30);
SELECT client_id FROM Invoices GROUP BY client_id HAVING COUNT(*) >= 2;
SELECT SubsetName FROM Subsets JOIN Documents ON Subsets.SubsetID = Documents.SubsetID JOIN Owners ON Documents.OwnerID = Owners.OwnerID WHERE Owners.OwnerName = 'Braeden';
SELECT AVG(distance) AS average_distance FROM ( SELECT distance FROM cities c1 JOIN distances d ON (c1.city_id = d.city_id_1 OR c1.city_id = d.city_id_2) WHERE c1.city_name = 'Boston' ) AS distances_to_from_boston;
SELECT COUNT(DISTINCT m.movie_id) AS distinct_movies_in_theaters FROM movies m JOIN theaters t ON m.movie_id = t.movie_id;
SELECT AgeCategories.category FROM Users JOIN AgeCategories ON Users.age = AgeCategories.age WHERE Users.description LIKE '%Mother%';
SELECT Books.isbn, COUNT(Orders.isbn) AS order_count FROM Books LEFT JOIN Orders ON Books.isbn = Orders.isbn GROUP BY Books.isbn;
SELECT p.name FROM pilots p WHERE EXISTS ( SELECT 1 FROM planes pl JOIN hangars h ON h.plane_id = pl.plane_id WHERE pl.pilot_id = p.pilot_id AND h.city IN ('Austin', 'Boston') GROUP BY pl.plane_id HAVING COUNT(DISTINCT h.city) = 2 );
SELECT a.name, a.gender FROM Authors a JOIN ( SELECT author_id, COUNT(*) as book_count FROM Books GROUP BY author_id ORDER BY book_count DESC LIMIT 1 ) b ON a.author_id = b.author_id;
SELECT COUNT(DISTINCT p.id) FROM pilots p JOIN planes pl ON p.id = pl.pilot_id JOIN locations l ON pl.location_id = l.id WHERE l.city = 'Chicago';
SELECT c.id, c.name, COUNT(s.id) AS service_count FROM Customers c JOIN Services s ON c.id = s.customer_id GROUP BY c.id, c.name ORDER BY service_count DESC LIMIT 1;
SELECT customer_id FROM ( SELECT customer_id, AVG(price) as avg_spend FROM Orders GROUP BY customer_id, good_id HAVING AVG(price) > 5 ) AS T GROUP BY customer_id;
SELECT ProductName FROM Products WHERE ProductId NOT IN ( SELECT ProductId FROM Orders );
SELECT d.document_id, COUNT(rd.related_document_id) AS related_documents_count FROM documents d LEFT JOIN related_documents rd ON d.document_id = rd.document_id GROUP BY d.document_id HAVING COUNT(rd.related_document_id) BETWEEN 2 AND 4 ORDER BY related_documents_count;
WITH detention_type_counts AS ( SELECT type_code, COUNT(*) AS count FROM detentions GROUP BY type_code ) SELECT dt.type_code, dt.description FROM detention_types dt LEFT JOIN detention_type_counts dtc ON dt.type_code = dtc.type_code ORDER BY dtc.count ASC, dt.type_code ASC LIMIT 1;
SELECT answer_text, COUNT(*) as answer_count FROM Answers GROUP BY answer_text ORDER BY answer_count DESC;
SELECT c1.name FROM collections AS c1 LEFT JOIN collections AS c2 ON c1.collection_id = c2.parent_collection_id WHERE c2.parent_collection_id IS NULL;
SELECT c.name AS customer_name, d.name AS dish_name FROM Orders o JOIN Customers c ON o.customer_id = c.id JOIN Dishes d ON o.dish_id = d.id;
SELECT Artist.first_name, Artist.last_name FROM Artist WHERE Artist.artist_id IN ( SELECT Painting.artist_id FROM Painting ) AND Artist.artist_id NOT IN ( SELECT Sculpture.artist_id FROM Sculpture );
SELECT Students.email AS student_email, Answers.answer_date FROM Students JOIN Answers ON Students.id = Answers.student_id ORDER BY Answers.answer_date DESC;
SELECT t.name AS transmitter_name, COUNT(cc.city_channel_id) AS num_city_channels FROM transmitter t JOIN radio r ON t.transmitter_id = r.transmitter_id LEFT JOIN city_channel cc ON r.radio_id = cc.radio_id GROUP BY t.transmitter_id, t.name ORDER BY t.name;
SELECT c.name AS city, COUNT(p.id) AS number_of_pilots, AVG(p.age) AS average_age FROM pilots p JOIN cities c ON p.city_id = c.id WHERE p.plane_id IS NOT NULL GROUP BY c.name;
SELECT a.name, COUNT(p.id) as paper_count FROM Affiliation a JOIN AuthorAffiliation aa ON a.id = aa.affiliation_id JOIN Paper p ON p.id = aa.paper_id WHERE p.year = 2009 GROUP BY a.name ORDER BY paper_count DESC LIMIT 3;
SELECT m.start_time, m.end_time, c.name AS client_name, c.other_client_details, s.name AS staff_name, s.other_staff_details FROM Meetings m JOIN Attendees a ON m.meeting_id = a.meeting_id LEFT JOIN Clients c ON a.person_id = c.client_id LEFT JOIN Staff s ON a.person_id = s.staff_id;
SELECT Students.first_name, Answers.answer_date FROM Students JOIN Answers ON Students.student_id = Answers.student_id;
SELECT books.title FROM books JOIN orders ON books.book_id = orders.book_id;
SELECT t.issuance_date FROM transcripts t JOIN students s ON t.student_id = s.student_id JOIN ( SELECT student_id, MAX(amount) AS max_loan_amount FROM loans GROUP BY student_id ORDER BY max_loan_amount DESC LIMIT 1 ) l ON s.student_id = l.student_id;
SELECT a.id AS agency_id FROM agencies a LEFT JOIN clients c ON a.id = c.agency_id WHERE c.agency_id IS NULL;
SELECT c.conference_name, COUNT(p.paper_id) AS number_of_times FROM Conferences c JOIN Papers p ON c.conference_id = p.conference_id GROUP BY c.conference_name;
SELECT DISTINCT o2.owner_name FROM owners AS o1 JOIN documents AS d1 ON o1.owner_id = d1.owner_id JOIN document_relations AS dr ON d1.document_id = dr.document_id_1 JOIN documents AS d2 ON dr.document_id_2 = d2.document_id JOIN owners AS o2 ON d2.owner_id = o2.owner_id WHERE o1.owner_name = 'Braeden' AND o2.owner_name <> 'Braeden';
WITH districts_with_spokesman AS ( SELECT districts.district_id, districts.population FROM districts WHERE districts.district_id IN (SELECT spokesmen.district_id FROM spokesmen) ) SELECT SUM(population) AS total_population, AVG(population) AS average_population FROM districts_with_spokesman;
SELECT DISTINCT p.pilot_id, p.pilot_name -- Assuming pilot_name exists in Pilots table FROM Pilots p JOIN Planes pl ON p.pilot_id = pl.pilot_id WHERE pl.plane_name = 'Piper Cub' AND p.pilot_id NOT IN ( SELECT pl2.pilot_id FROM Planes pl2 WHERE pl2.plane_name = 'B-52 Bomber' );
SELECT c.Name FROM Conferences c JOIN ( SELECT ConferenceID, COUNT(*) as AttendantsCount FROM Attendants GROUP BY ConferenceID ORDER BY COUNT(*) DESC LIMIT 2 ) a ON c.ConferenceID = a.ConferenceID;
SELECT c.id AS content_id, COALESCE(SUM(b.value), 0) AS total_value, COALESCE(SUM(b.number), 0) AS total_number_of_boxes FROM content c LEFT JOIN box b ON c.id = b.content_id GROUP BY c.id;
SELECT PackageNumber, MAX(Weight) as HeaviestWeight FROM Packages JOIN Clients ON Packages.ClientID = Clients.ClientID WHERE Clients.ClientName LIKE '%John%' GROUP BY PackageNumber;
SELECT DISTINCT scores.stage_presence_score FROM scores JOIN songs ON scores.song_id = songs.song_id WHERE songs.language = 'English';
SELECT Students.first_name, Answers.answer_date FROM Students JOIN Answers ON Students.student_id = Answers.student_id;
SELECT p.type AS plane_type, AVG(EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM pi.birthdate)) AS average_age FROM planes p JOIN pilot_plane pp ON p.plane_id = pp.plane_id JOIN pilots pi ON pp.pilot_id = pi.pilot_id GROUP BY p.type;
SELECT p.width FROM paintings AS p JOIN artists AS a ON p.artist_id = a.artist_id WHERE a.birth_year < 1850;
SELECT n.name FROM neighborhoods n LEFT JOIN stores s ON n.id = s.neighborhood_id AND s.product = 'headphone' AND s.stock > 0 WHERE s.id IS NULL;
-- SQL query to list the title of games with platforms that have market district in Asia or USA SELECT DISTINCT g.title FROM games g JOIN game_platforms gp ON g.id = gp.game_id JOIN platforms p ON gp.platform_id = p.id JOIN platform_markets pm ON p.id = pm.platform_id JOIN markets m ON pm.market_id = m.id WHERE m.district IN ('Asia', 'USA');
SELECT Students.*, Loans.amount FROM Students JOIN Loans ON Students.student_id = Loans.student_id WHERE Loans.amount > ( SELECT AVG(amount) FROM Loans );
SELECT clients.client_name FROM clients LEFT JOIN orders ON clients.client_id = orders.client_id WHERE orders.order_id IS NULL;
SELECT make_name FROM make WHERE make_id IN ( SELECT team_make_id FROM team GROUP BY team_make_id HAVING COUNT(*) > 1 )
SELECT location_name, SUM(capacity) AS total_capacity, AVG(capacity) AS average_capacity, MAX(capacity) AS max_capacity FROM locations GROUP BY location_name;
SELECT player_name FROM Players WHERE player_id NOT IN ( SELECT player_id FROM Games );
SELECT m.meeting_id, m.meeting_outcome, m.meeting_type, c.client_id, c.client_details -- Replace this with actual client detail column names, separated by commas FROM Meetings m JOIN Clients c ON m.client_id = c.client_id;
SELECT BookTypes.typeName FROM BookTypes JOIN ( SELECT bookTypeId, COUNT(*) as book_count FROM Books GROUP BY bookTypeId HAVING COUNT(*) >= 3 ) AS Counts ON BookTypes.id = Counts.bookTypeId;
SELECT DISTINCT A.name, A.birth_year FROM Artist A JOIN Artwork AR ON A.artist_id = AR.artist_id JOIN Medium M ON AR.medium_id = M.medium_id WHERE M.name = 'Sculpture' AND AR.creation_year > 1920;
SELECT a.author_name FROM authors a JOIN author_document ad ON a.author_id = ad.author_id GROUP BY a.author_id, a.author_name HAVING COUNT(ad.document_id) >= 2;
SELECT e.name, COUNT(h.earpad_id) as usage_count FROM earpads e JOIN headphones h ON e.id = h.earpad_id GROUP BY e.id ORDER BY usage_count DESC LIMIT 2;
SELECT A.FirstName, COUNT(P.ArtistID) as NumberOfPaintings FROM Artists A JOIN Paintings P ON A.ArtistID = P.ArtistID GROUP BY A.ArtistID, A.FirstName HAVING COUNT(P.ArtistID) >= 2;
SELECT c.name AS Country FROM Countries c JOIN ( SELECT country_id, COUNT(*) AS player_count FROM Players GROUP BY country_id HAVING COUNT(*) > 1 ) p ON c.id = p.country_id;
SELECT layer_type_code, COUNT(layer_type_code) AS count FROM dim_analytical_layer GROUP BY layer_type_code ORDER BY count DESC LIMIT 1;
SELECT DISTINCT s.name FROM Staff s JOIN Speaker sp ON s.staff_id = sp.staff_id JOIN Sponsor spn ON s.staff_id = spn.staff_id;
-- SQL Query to find the average cost of headphones for each headphone construction SELECT p.headphone_construction, AVG(p.price) AS average_price FROM products AS p WHERE p.product_type = 'headphone' GROUP BY p.headphone_construction;
SELECT manufacturer, COUNT(*) as club_count FROM clubs GROUP BY manufacturer ORDER BY club_count DESC LIMIT 1;
SELECT a.state FROM Students s JOIN Addresses a ON s.student_id = a.student_id WHERE s.first_name = 'Linda';
SELECT drivers.name FROM drivers JOIN driver_vehicles ON drivers.driver_id = driver_vehicles.driver_id JOIN vehicles ON driver_vehicles.vehicle_id = vehicles.vehicle_id WHERE vehicles.power > 5000;
SELECT DISTINCT Artist.artist_birthyear AS BirthYear FROM Artist JOIN Artwork ON Artist.artist_id = Artwork.artist_id JOIN Medium ON Artwork.medium_id = Medium.medium_id WHERE Medium.medium_name = 'sculpture' AND Artwork.artwork_year > 1920;
WITH box_counts AS ( SELECT warehouse_code, COUNT(*) AS box_count FROM boxes GROUP BY warehouse_code ) SELECT w.warehouse_code FROM warehouses w JOIN box_counts bc ON w.warehouse_code = bc.warehouse_code WHERE bc.box_count > w.capacity;
WITH author_id AS ( SELECT AuthorID FROM Authors WHERE AuthorName = 'Mckeown, Kathleen' ) SELECT COUNT(DISTINCT least, greatest) AS collaborator_count FROM ( SELECT LEAST(a1.AuthorID, a2.AuthorID) AS least, GREATEST(a1.AuthorID, a2.AuthorID) AS greatest FROM Collaborations c JOIN Authors a1 ON c.AuthorID1 = a1.AuthorID JOIN Authors a2 ON c.AuthorID2 = a2.AuthorID WHERE (a1.AuthorID IN (SELECT AuthorID FROM author_id)) OR (a2.AuthorID IN (SELECT AuthorID FROM author_id)) ) collaborations;
SELECT boxes.code FROM boxes JOIN warehouses ON boxes.warehouse_id = warehouses.id WHERE warehouses.city IN ('Chicago', 'New York');
SELECT ph.date_stamp, p.property_name FROM property_history ph JOIN property p ON ph.property_id = p.property_id ORDER BY ph.date_stamp;
SELECT p.PackageNumber FROM Packages p JOIN Customers c ON p.CustomerID = c.CustomerID WHERE c.FirstName = 'Leo' AND c.LastName = 'Wong';
SELECT v.name, COALESCE(SUM(EXTRACT(EPOCH FROM r.end_time - r.start_time) / 3600), 0) AS total_rental_hours FROM vehicles v LEFT JOIN rentals r ON v.vehicle_id = r.vehicle_id GROUP BY v.name ORDER BY total_rental_hours DESC;
SELECT i.id AS invoice_id, COUNT(p.id) AS payment_count FROM invoices i LEFT JOIN payments p ON i.id = p.invoice_id GROUP BY i.id;
SELECT a.first_name, a.last_name FROM Artists a WHERE EXISTS ( SELECT 1 FROM Paintings p WHERE p.artist_id = a.id ) AND EXISTS ( SELECT 1 FROM Sculptures s WHERE s.artist_id = a.id );
SELECT COUNT(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM orders );
SELECT name, age FROM pilots WHERE age < ( SELECT AVG(age) FROM pilots ) ORDER BY age ASC;
SELECT s.service_id, s.service_name, s.service_description FROM service s JOIN contract c ON s.service_id = c.service_service_id JOIN customer cu ON c.customer_customer_id = cu.customer_id WHERE cu.first_name = 'Hardy' AND cu.last_name = 'Kutch';
SELECT product_price, product_size FROM products WHERE product_price > ( SELECT AVG(product_price) FROM products );
SELECT r.rank FROM ranks r JOIN books b ON r.book_id = b.book_id WHERE b.num_pages = ( SELECT MIN(num_pages) FROM books );
SELECT Clubs.name FROM Clubs LEFT JOIN Players ON Clubs.club_id = Players.club_id WHERE Players.club_id IS NULL;
SELECT h.model FROM headphones h LEFT JOIN inventory i ON h.id = i.headphone_id WHERE i.headphone_id IS NULL;
WITH Director_Count_per_Channel AS ( SELECT Channel_id, COUNT(*) AS Director_Count FROM Channel_Director GROUP BY Channel_id ) SELECT c.name, c.internet_web FROM Channel c JOIN Director_Count_per_Channel dc ON c.id = dc.Channel_id WHERE dc.Director_Count = ( SELECT MAX(Director_Count) FROM Director_Count_per_Channel );
SELECT f.distance FROM flights f JOIN airports a1 ON f.origin_airport_id = a1.airport_id JOIN airports a2 ON f.destination_airport_id = a2.airport_id WHERE (a1.city = 'Boston' AND a2.city = 'Newark') OR (a1.city = 'Newark' AND a2.city = 'Boston');
SELECT v.vehicle_name, COALESCE(SUM(EXTRACT(EPOCH FROM r.rental_end_time) - EXTRACT(EPOCH FROM r.rental_start_time)) / 3600, 0) AS total_rental_hours FROM Vehicles v LEFT JOIN Rentals r ON v.vehicle_id = r.vehicle_id GROUP BY v.vehicle_name ORDER BY total_rental_hours DESC;
SELECT s.id, s.name FROM Sailors s JOIN ( SELECT sailor_id FROM Reservations GROUP BY sailor_id HAVING COUNT(*) > 1 ) r ON s.id = r.sailor_id;
SELECT completion_year, COUNT(building_id) as num_completed_buildings FROM buildings WHERE completion_year IS NOT NULL GROUP BY completion_year ORDER BY num_completed_buildings DESC LIMIT 1;
SELECT a.name, a.gender FROM authors a JOIN ( SELECT author_id, COUNT(*) as book_count FROM books GROUP BY author_id ORDER BY book_count DESC LIMIT 1 ) b ON a.author_id = b.author_id;
SELECT a.agency_id, a.agency_name, a.agency_address, a.agency_phone, COUNT(c.client_id) as client_count FROM agency a LEFT JOIN client c ON a.agency_id = c.agency_id GROUP BY a.agency_id, a.agency_name, a.agency_address, a.agency_phone HAVING COUNT(c.client_id) >= 2;
SELECT name, nickname FROM institutions;
SELECT c.name AS color, d.description AS description, s.name AS size FROM products p JOIN colors c ON p.color_id = c.color_id JOIN descriptions d ON p.description_id = d.description_id JOIN sizes s ON p.size_id = s.size_id WHERE p.price < (SELECT MAX(price) FROM products);
SELECT COUNT(DISTINCT p.id) FROM Properties p JOIN Features f1 ON p.id = f1.property_id JOIN Features f2 ON p.id = f2.property_id AND f1.id <> f2.id;
SELECT c.make, AVG(d.age) AS average_age FROM drivers d JOIN cars c ON d.car_id = c.car_id GROUP BY c.make;
SELECT f.food_name, AVG(p.price) AS AveragePrice, MIN(p.price) AS MinimumPrice, MAX(p.price) AS MaximumPrice FROM Food f JOIN Price p ON f.food_id = p.food_id GROUP BY f.food_name;
SELECT f.name AS food_type, MIN(g.price) AS lowest_price, MAX(g.price) AS highest_price FROM Goods g JOIN FoodTypes f ON g.food_type_id = f.id GROUP BY f.name ORDER BY f.name;
SELECT p.paperID, p.title FROM paper p JOIN wrote w1 ON p.paperID = w1.paperID JOIN author a1 ON w1.authorID = a1.authorID AND a1.authorName = 'Mckeown, Kathleen' JOIN wrote w2 ON p.paperID = w2.paperID JOIN author a2 ON w2.authorID = a2.authorID AND a2.authorName = 'Rambow, Owen' WHERE w1.authorID <> w2.authorID;
SELECT at.code, at.description FROM address_types at JOIN ( SELECT address_type_code, COUNT(*) as count FROM student_addresses GROUP BY address_type_code ORDER BY count DESC LIMIT 1 ) most_common ON at.code = most_common.address_type_code;
SELECT Orders.id AS OrderId, COUNT(OrderItems.product_id) AS NumberOfProducts, Orders.status AS OrderStatus FROM Orders LEFT JOIN OrderItems ON Orders.id = OrderItems.order_id GROUP BY Orders.id, Orders.status;
SELECT p.id, p.name, p.price, p.color FROM Products p WHERE ( SELECT COUNT(*) FROM Orders o JOIN OrderItems oi ON o.id = oi.order_id WHERE oi.product_id = p.id ) < 2;
SELECT COUNT(DISTINCT w.warehouseID) as num_warehouses FROM Warehouses w JOIN Boxes b ON w.warehouseID = b.warehouseID JOIN Items i ON b.boxID = i.boxID WHERE i.itemName = 'Rocks';
SELECT Artist.first_name, COUNT(Work.id) as number_of_works FROM Artist JOIN Work ON Artist.id = Work.artist_id WHERE Work.type = 'Painting' GROUP BY Artist.first_name HAVING COUNT(Work.id) >= 2;
SELECT majors.major_name, majors.major_rank FROM majors JOIN universities ON majors.university_id = universities.id WHERE universities.name = 'Augustana College';
SELECT ClubName FROM Clubs WHERE ClubID NOT IN (SELECT ClubID FROM Players);
SELECT states.name AS state_name, COUNT(cities.id) AS number_of_cities FROM states LEFT JOIN cities ON states.state_id = cities.state_id GROUP BY states.state_id;
SELECT COUNT(p.id) as package_count FROM packages p JOIN senders s ON p.sender_id = s.id JOIN receivers r ON p.receiver_id = r.id WHERE s.name = 'Ogden Wernstrom' AND r.name = 'Leo Wong';
SELECT name FROM regions WHERE id NOT IN ( SELECT region_id FROM buildings );
SELECT b.title FROM Books b JOIN Orders o1 ON b.book_id = o1.book_id JOIN Clients c1 ON o1.client_id = c1.client_id LEFT JOIN Orders o2 ON b.book_id = o2.book_id AND o2.client_id = (SELECT client_id FROM Clients WHERE name = 'James Smith') WHERE c1.name = 'Peter Doe' AND o2.order_id IS NULL;
SELECT e.name FROM earpads e JOIN materials m ON e.material_id = m.id WHERE m.name != 'plastic' GROUP BY e.name;
SELECT c.capital FROM countries c JOIN ( SELECT country_id FROM drivers WHERE points = ( SELECT MAX(points) FROM drivers ) ) d ON c.country_id = d.country_id;
SELECT a1.aname AS CoAuthor, COUNT(*) AS NumCoAuthoredPapers FROM Author a1 JOIN Writes w1 ON a1.aid = w1.aid JOIN Writes w2 ON w1.pid = w2.pid JOIN Author a2 ON w2.aid = a2.aid WHERE a2.aname = 'Mckeown, Kathleen' AND a1.aid != a2.aid GROUP BY a1.aname ORDER BY COUNT(*) DESC LIMIT 1;
SELECT p.name FROM Planets p JOIN ( SELECT sh.planet_id, SUM(sh.weight) AS total_weight FROM Shipments sh JOIN Items i ON sh.shipment_id = i.shipment_id GROUP BY sh.planet_id HAVING SUM(sh.weight) > 30 ) sw ON p.planet_id = sw.planet_id;
SELECT c.city_name, MAX(d.distance) AS max_distance FROM cities c JOIN distances d ON c.city_id = d.city_id_2 WHERE d.city_id_1 = 1 -- Assuming Boston's city_id is 1 GROUP BY c.city_name ORDER BY max_distance DESC LIMIT 1;
SELECT f.feature_name, f.feature_description, COUNT(p.feature_id) AS feature_count FROM features f JOIN properties p ON f.feature_id = p.feature_id GROUP BY f.feature_id, f.feature_name, f.feature_description ORDER BY feature_count DESC LIMIT 1;
SELECT movies.name AS movie_name, theaters.name AS theater_name FROM movies JOIN movies_theaters ON movies.id = movies_theaters.movie_id JOIN theaters ON movies_theaters.theater_id = theaters.id;
SELECT p.id, p.description FROM products p JOIN ( SELECT product_id, COUNT(*) as count FROM sales GROUP BY product_id HAVING COUNT(*) > 3 ) s ON p.id = s.product_id;
SELECT p2.process_name FROM processes p1 JOIN processes p2 ON p1.next_process_id = p2.id WHERE p1.id = 9;
SELECT s.state_abbr, COUNT(u.university_id) as university_count FROM state s JOIN university u ON s.state_abbr = u.state_abbr WHERE u.enrollment < 3000 GROUP BY s.state_abbr HAVING COUNT(u.university_id) > 2;
SELECT Packages.* FROM Packages JOIN Customers AS Sender ON Packages.sender_id = Sender.customer_id JOIN Customers AS Receiver ON Packages.receiver_id = Receiver.customer_id WHERE Sender.customer_name = 'Leo Wong' OR Receiver.customer_name = 'Leo Wong';
SELECT d.id FROM Documents d JOIN Collections c ON d.collection_id = c.id LEFT JOIN Subsets s ON d.collection_id = s.collection_id AND s.year = 2000 WHERE c.name = 'Best' AND s.id IS NULL;
SELECT Buyers.first_name AS buyer_first_name, Products.product_name AS product_name FROM Orders JOIN Buyers ON Orders.buyer_id = Buyers.id JOIN Products ON Orders.product_id = Products.id;
SELECT p.name, pl.type, MIN(p.birthdate) as oldest_pilot_birthdate FROM pilots p JOIN certifications c ON p.id = c.pilot_id JOIN planes pl ON c.plane_id = pl.id GROUP BY pl.type;
SELECT p.name, pl.type FROM pilots p JOIN certifications c ON p.id = c.pilot_id JOIN planes pl ON c.plane_id = pl.id WHERE p.birthdate IN ( SELECT MIN(p2.birthdate) FROM pilots p2 JOIN certifications c2 ON p2.id = c2.pilot_id JOIN planes pl2 ON c2.plane_id = pl2.id WHERE pl2.type = pl.type GROUP BY pl2.type );
SELECT a.name AS affiliation_name, COUNT(p.id) AS paper_count FROM affiliations a LEFT JOIN papers p ON a.id = p.affiliation_id GROUP BY a.id ORDER BY paper_count DESC;
SELECT w.warehouse_id, COUNT(DISTINCT c.content_type) as distinct_content_types_count FROM warehouses w LEFT JOIN contents c ON w.warehouse_id = c.warehouse_id GROUP BY w.warehouse_id;
SELECT DISTINCT n.Name FROM Nations n JOIN Members m1 ON n.Id = m1.NationId AND m1.Age > 22 JOIN Members m2 ON n.Id = m2.NationId AND m2.Age < 19;
SELECT u.name AS university_name FROM university u JOIN university_major um1 ON u.id = um1.university_id AND um1.major_id = (SELECT id FROM major WHERE name = 'Accounting') JOIN university_major um2 ON u.id = um2.university_id AND um2.major_id = (SELECT id FROM major WHERE name = 'Urban Education') GROUP BY u.id, u.name;
WITH MostCommonResult AS ( SELECT student_id, result FROM BehaviourMonitoring GROUP BY student_id, result ORDER BY student_id, COUNT(result) DESC ), StudentCommonResult AS ( SELECT student_id, result FROM MostCommonResult WHERE row_number() OVER (PARTITION BY student_id ORDER BY COUNT(result) DESC) = 1 ) SELECT s.* FROM Students s JOIN BehaviourMonitoring b ON s.id = b.student_id JOIN StudentCommonResult sc ON s.id = sc.student_id AND b.result = sc.result GROUP BY s.id HAVING COUNT(DISTINCT b.result) = 1;
SELECT DISTINCT b.BookTitle FROM Orders o JOIN Books b ON o.BookID = b.BookID JOIN Clients c ON o.ClientID = c.ClientID WHERE c.ClientName = 'Peter Doe' AND b.BookID NOT IN ( SELECT o2.BookID FROM Orders o2 JOIN Clients c2 ON o2.ClientID = c2.ClientID WHERE c2.ClientName = 'James Smith' );
SELECT meeting_outcome, COUNT(*) as number_of_meetings FROM meetings GROUP BY meeting_outcome;
SELECT EMPLOYEE_NAME FROM EMPLOYEE_TABLE WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE_TABLE) OR SALARY > 5000;
SELECT DISTINCT g.title FROM games g JOIN platforms p ON g.game_id = p.game_id JOIN markets m ON p.market_id = m.market_id JOIN districts d ON m.district_id = d.district_id WHERE d.continent IN ('Asia', 'USA');
-- First, we find the IDs of staff members who participated in conferences in 2004 WITH staff_in_2004_conferences AS ( SELECT DISTINCT s.staff_id FROM staff s JOIN staff_conference sc ON s.staff_id = sc.staff_id JOIN conference c ON sc.conference_id = c.conference_id WHERE YEAR(c.conference_start_date) = 2004 ), -- Next, we find the IDs of universities that had staff participating in conferences in 2004 universities_with_staff_in_2004_conferences AS ( SELECT DISTINCT u.university_id FROM university u JOIN staff s ON u.university_id = s.university_id JOIN staff_in_2004_conferences s2004 ON s.staff_id = s2004.staff_id ) -- Finally, we select the names and locations of universities that did not have any staff participating in any conferences in 2004 SELECT u.university_name, u.university_location FROM university u LEFT JOIN universities_with_staff_in_2004_conferences u2004 ON u.university_id = u2004.university_id WHERE u2004.university_id IS NULL;
SELECT property_type_code, property_type_description, COUNT(*) as property_count FROM property_table GROUP BY property_type_code, property_type_description ORDER BY property_count DESC LIMIT 1;
SELECT DISTINCT c.ConstructorName FROM Constructors c JOIN Driver_Constructor dc1 ON c.ConstructorId = dc1.ConstructorId JOIN Drivers d1 ON dc1.DriverId = d1.DriverId AND d1.Age < 20 JOIN Driver_Constructor dc2 ON c.ConstructorId = dc2.ConstructorId JOIN Drivers d2 ON dc2.DriverId = d2.DriverId AND d2.Age > 30;
SELECT id FROM Students WHERE sex = 'F' AND state = 'PA';
SELECT Sailors.SailorID, Sailors.Name FROM Sailors JOIN Boats ON Sailors.SailorID = Boats.SailorID WHERE Boats.Color IN ('red', 'blue');
WITH author_citations AS ( SELECT a.author_id, a.author_name, COUNT(c.paper_id) AS citations FROM authors a JOIN papers p ON a.author_id = p.author_id JOIN citations c ON p.paper_id = c.cited_paper_id GROUP BY a.author_id, a.author_name ), max_citations AS ( SELECT MAX(citations) AS max_citations FROM author_citations ) SELECT ac.author_name, ac.citations FROM author_citations ac JOIN max_citations mc ON ac.citations = mc.max_citations;
SELECT sd.* FROM services AS sd JOIN customer_service_ratings AS csr ON sd.service_id = csr.service_id WHERE csr.rating = 'unsatisfied';
SELECT s.student_id, a.address, a.city, a.state, a.zip, b.bio FROM students s JOIN addresses a ON s.student_id = a.student_id JOIN biographies b ON s.student_id = b.student_id;
SELECT Nationality, COUNT(*) as CustomerCount FROM Customers GROUP BY Nationality ORDER BY CustomerCount DESC LIMIT 1;
SELECT s.store_name, SUM(i.quantity_in_stock) AS total_headphones FROM stores s JOIN inventory i ON s.store_id = i.store_id JOIN products p ON i.product_id = p.product_id WHERE p.product_type = 'headphones' GROUP BY s.store_id ORDER BY total_headphones DESC LIMIT 1;
SELECT Year, COUNT(*) as NumConferences FROM Conferences GROUP BY Year ORDER BY NumConferences ASC LIMIT 1;
WITH meeting_clients AS ( SELECT client_id, COUNT(id) as meeting_count FROM meetings GROUP BY client_id ), invoiced_clients AS ( SELECT client_id FROM invoices ) SELECT clients.id, sic_code, agency_id FROM clients JOIN meeting_clients ON clients.id = meeting_clients.client_id JOIN invoiced_clients ON clients.id = invoiced_clients.client_id WHERE meeting_count = 1;
SELECT shipment.shipment_id FROM employee JOIN shipment ON employee.employee_id = shipment.employee_id WHERE employee.first_name = 'Phillip' AND employee.last_name = 'Fry';
SELECT AVG(value) AS average_value, SUM(value) AS total_value FROM boxes;
SELECT year, MIN(rank) AS min_rank, MAX(rank) AS max_rank FROM players GROUP BY year ORDER BY year;
SELECT COUNT(*) AS total_customers FROM Customers;
SELECT v.model FROM vehicles v JOIN vehicle_specs vs ON v.id = vs.vehicle_id WHERE vs.power > 6000 ORDER BY vs.top_speed DESC LIMIT 1;
SELECT COUNT(*) FROM Sailors WHERE Sailors.Name LIKE 'D%';
SELECT name FROM countries ORDER BY education_score DESC;
SELECT COUNT(DISTINCT c.id) AS distinct_customers, COUNT(DISTINCT s.id) AS distinct_services FROM Customers c, Services s;
SELECT COUNT(DISTINCT size) AS number_of_room_sizes FROM rooms;
SELECT MIN(date) AS EarliestLoanDate FROM loans;
SELECT cities.city_name, stations.station_name FROM cities JOIN stations ON cities.city_id = stations.city_id ORDER BY stations.station_name ASC;
SELECT c.client_id, c.first_name, c.last_name, c.email, c.phone, c.address, c.city, c.state, c.zip_code, csc.sic_code FROM clients c JOIN client_sic_code csc ON c.client_id = csc.client_id WHERE csc.sic_code = 'Bad';
SELECT login_name FROM users WHERE DATE_PART('year', AGE(birthdate)) >= 65 ORDER BY first_name;
SELECT Name FROM Clubs ORDER BY Name ASC;
SELECT members.name AS member_name, countries.name AS member_nationality FROM members JOIN countries ON members.nationality_id = countries.id;
SELECT a.name FROM authors a JOIN documents d ON a.id = d.author_id WHERE d.id = 4;
SELECT MIN(age) AS MinimumAge, MAX(age) AS MaximumAge FROM drivers;
SELECT DISTINCT state_name FROM states;
SELECT name, biographical_information FROM students WHERE details LIKE '%Suite%';
SELECT name FROM Institutions ORDER BY founded_year ASC;
SELECT DISTINCT state FROM customers;
SELECT CookieId, CakeId FROM ( SELECT id AS CookieId FROM Cookie WHERE price >= 3 AND price <= 7 ) AS CookieResult JOIN ( SELECT id AS CakeId FROM Cake WHERE price >= 3 AND price <= 7 ) AS CakeResult;
SELECT COUNT(*) FROM addresses;
SELECT COUNT(book_id) AS number_of_books FROM Books;
SELECT subsets.name AS subset_name FROM documents JOIN subsets ON documents.subset_id = subsets.subset_id GROUP BY subsets.name;
SELECT COUNT(*) as document_count FROM documents WHERE owner = 'Marlin';
SELECT title FROM book ORDER BY title ASC;
SELECT distance FROM distances WHERE (airport_code1 = 'BAL' AND airport_code2 = 'CHI') OR (airport_code1 = 'CHI' AND airport_code2 = 'BAL');
SET @lat1 = (SELECT latitude FROM airports WHERE airport_code = 'BAL'); SET @lon1 = (SELECT longitude FROM airports WHERE airport_code = 'BAL'); SET @lat2 = (SELECT latitude FROM airports WHERE airport_code = 'CHI'); SET @lon2 = (SELECT longitude FROM airports WHERE airport_code = 'CHI'); SET @dlon = RADIANS(@lon2 - @lon1); SET @dlat = RADIANS(@lat2 - @lat1); SET @a = SIN(@dlat / 2) * SIN(@dlat / 2) + COS(RADIANS(@lat1)) * COS(RADIANS(@lat2)) * SIN(@dlon / 2) * SIN(@dlon / 2); SET @c = 2 * ATAN2(SQRT(@a), SQRT(1 - @a)); SET @distance = 6371 * @c; -- Earth radius in kilometers SELECT @distance AS Distance_In_KM;
SELECT g.title, d.developer_name FROM games g JOIN developers d ON g.developer_id = d.developer_id ORDER BY g.units_sold DESC;
SELECT DISTINCT rating FROM Ratings;
SELECT package_number, weight FROM packages WHERE weight BETWEEN 10 AND 30;
SELECT COUNT(*) FROM Boats WHERE color = 'red';
SELECT p.year, l.locationName, p.title FROM Paintings p JOIN Locations l ON p.locationID = l.locationID WHERE p.height > 1000 ORDER BY p.title;
SELECT AVG(loan_amount) AS AverageLoanAmount FROM student_loans;
SELECT universities.name AS university_name, cities.name AS city_name, states.name AS state_name FROM universities JOIN cities ON universities.city_id = cities.id JOIN states ON cities.state_id = states.id ORDER BY universities.name ASC;
SELECT c.* FROM content c JOIN boxes b ON c.id = b.content_id ORDER BY c.value DESC LIMIT 1;
SELECT region_name FROM regions ORDER BY area DESC LIMIT 5;
SELECT V.top_speed, V.power FROM Vehicles V JOIN Manufacturing M ON V.id = M.vehicle_id WHERE M.year = 1996;
SELECT AVG(Paintings.height) AS AverageHeight, AVG(Paintings.width) AS AverageWidth FROM Paintings JOIN Mediums ON Paintings.medium_id = Mediums.medium_id JOIN Galleries ON Galleries.painting_id = Paintings.painting_id WHERE Mediums.name = 'oil' AND Galleries.gallery_id = 241;
SELECT AVG(justice_score) AS average_justice_score FROM countries;
SELECT AVG(Salary) AS AverageInternSalary FROM Employees WHERE Position = 'Intern';
SELECT DISTINCT boat_id FROM Reservations WHERE sailor_id = 1;
SELECT id, name, government_website FROM districts ORDER BY population;
SELECT id, name, government_website FROM districts ORDER BY population DESC;
SELECT Planes.Name FROM Planes JOIN Pilots ON Planes.PilotID = Pilots.PilotID WHERE Pilots.Name = 'Jones' AND Pilots.Age = 32;
SELECT region_name FROM regions ORDER BY region_name ASC;
SELECT id FROM Paintings WHERE height > 500 AND height < 2000;
SELECT COUNT(*) FROM Reference WHERE paper_id = 'D12-1027';
SELECT COUNT(*) as total_invoices FROM invoices;
SELECT COUNT(invoice_id) as total_invoices FROM invoices;
SELECT exam_date FROM exams WHERE subject_code LIKE '%data%' ORDER BY exam_date DESC;
SELECT COUNT(DISTINCT customer_id) FROM orders;
SELECT exam_name, exam_date FROM Exam WHERE subject_code NOT IN ( SELECT subject_code FROM Subject WHERE subject_name = 'Database' );
SELECT id, price FROM goods WHERE id LIKE '%70%';
SELECT id, price FROM goods WHERE id = '70';
SELECT DISTINCT ConferenceName FROM Conferences;
SELECT COUNT(*) AS number_of_races FROM races;
SELECT countries.name, SUM(scores.score) AS overall_score FROM countries LEFT JOIN scores ON countries.id = scores.country_id GROUP BY countries.id, countries.name ORDER BY overall_score DESC;
SELECT Stadiums.StadiumName, Institutions.InstitutionName, Stadiums.Capacity FROM Stadiums JOIN Institutions ON Stadiums.InstitutionID = Institutions.InstitutionID ORDER BY Stadiums.Capacity DESC;
SELECT DISTINCT l.name, l.address FROM Location l JOIN Painting p ON l.location_id = p.location_id WHERE p.year < 1885 AND p.medium_id NOT IN ( SELECT m.medium_id FROM Medium m WHERE m.name = 'canvas' );
SELECT CustomerName FROM Customers ORDER BY MembershipLevel ASC;
SELECT name FROM pilots ORDER BY date_of_birth ASC LIMIT 1;
SELECT COUNT(*) AS total_universities FROM universities WHERE state IN ('Illinois', 'Ohio');
SELECT title FROM sculptures WHERE year_created = ( SELECT MAX(year_created) FROM sculptures );
SELECT Clients.name, Addresses.address FROM Clients JOIN Addresses ON Clients.address_id = Addresses.address_id;
SELECT AVG(c.card_credit) as average_card_credit FROM customers c JOIN membership_levels ml ON c.membership_level_id = ml.membership_level_id WHERE ml.level > 1;
SELECT title FROM Books WHERE sale_price = (SELECT MIN(sale_price) FROM Books);
SELECT COUNT(*) FROM countries;
SELECT Driver.driver_name FROM Driver JOIN Nationality ON Driver.nationality_id = Nationality.nationality_id WHERE Nationality.nationality_name = 'United States';
SELECT t.* FROM Transmitter t JOIN Radio r ON t.radio_id = r.radio_id WHERE r.ERP > 150 OR r.ERP < 30;
SELECT name FROM drivers ORDER BY name DESC;
SELECT driver_name FROM drivers WHERE constructor_id NOT IN ( SELECT constructor_id FROM constructors WHERE constructor_name = 'Bugatti' );
SELECT COUNT(*) AS number_of_authors FROM authors;
SELECT DISTINCT e.entrant_type FROM entrants e JOIN drivers d ON e.driver_id = d.driver_id WHERE d.age >= 20;
SELECT city_code FROM cities WHERE distance = (SELECT MAX(distance) FROM cities);
SELECT COUNT(*) AS total_customers FROM Customers;
SELECT COUNT(customer_id) AS total_customers FROM Customers;
SELECT id AS address_id, street, city, state, zip_code FROM address;
SELECT locations.*, planes.name FROM locations JOIN planes ON locations.plane_id = planes.id ORDER BY planes.name;
SELECT year, MIN(rank) AS min_rank, MAX(rank) AS max_rank FROM Players GROUP BY year;
SELECT Artist.FirstName || ' ' || Artist.LastName AS FullName FROM Artist WHERE Artist.BirthYear > 1850;
SELECT DISTINCT subset_name FROM Collections;
SELECT COUNT(*) FROM boats WHERE color = 'red';
SELECT type_code, details, date FROM achievements;
SELECT COUNT(DISTINCT payment_method) AS num_payment_methods FROM payments;
SELECT COUNT(DISTINCT Country) AS NumberOfCountries FROM Players;
SELECT MIN(sale_price) AS MinimumPrice, MAX(sale_price) AS MaximumPrice FROM Books;
SELECT MAX(height) AS MaximumHeight, id AS PaintingId FROM Paintings WHERE year_painted < 1900;
SELECT status, COUNT(*) as status_count FROM processes GROUP BY status;
SELECT product_name FROM Products WHERE product_type = 'Clothes' ORDER BY price DESC LIMIT 1;
SELECT name FROM pilots WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;
SELECT p.name, MIN(EXTRACT(YEAR FROM AGE(p.birth_date))) as youngest_age FROM Pilots p JOIN Flights f ON p.pilot_id = f.pilot_id JOIN Planes pl ON f.plane_id = pl.plane_id WHERE pl.plane_model = 'Piper Cub' GROUP BY p.name ORDER BY youngest_age ASC LIMIT 1;
SELECT MAX(stories) AS max_stories FROM buildings WHERE completion_year <> 1980;
SELECT song_name FROM Songs ORDER BY song_name ASC;
SELECT * FROM authors;
SELECT author_name, author_email FROM authors;
SELECT first_name, age FROM ( SELECT p.first_name, p.birth_date, p.death_date, DATEDIFF(YEAR, p.birth_date, p.death_date) AS age, DENSE_RANK() OVER (ORDER BY DATEDIFF(YEAR, p.birth_date, p.death_date) DESC) AS rank FROM Person p INNER JOIN Artist a ON p.person_id = a.person_id WHERE p.death_date IS NOT NULL ) temp WHERE rank = 1;
SELECT t.name AS Transmitter_Name FROM Transmitter t JOIN Radio r ON t.radio_id = r.radio_id WHERE r.ERP_kW = ( SELECT MAX(ERP_kW) FROM Radio );
SELECT b.book_id, b.book_title, MIN(c.chapter_number) AS min_chapter, MAX(c.chapter_number) AS max_chapter FROM Books b LEFT JOIN Chapters c ON b.book_id = c.book_id GROUP BY b.book_id, b.book_title;
SELECT Name, Age FROM Customers WHERE MembershipCredit = ( SELECT MAX(MembershipCredit) FROM Customers );
SELECT registration_date FROM users WHERE login_name = 'ratione';
SELECT COUNT(*) FROM paper JOIN conference ON paper.conference_id = conference.conference_id WHERE conference.name = 'NAACL' AND conference.year = 2000;
SELECT COUNT(DISTINCT e.engine_id) FROM Engine e JOIN Car c ON e.engine_id = c.engine_id JOIN Driver d ON c.car_id = d.car_id WHERE d.age < 20 OR d.age > 30;
SELECT COUNT(DISTINCT country) AS distinct_countries FROM players;
SELECT COUNT(*) FROM business_processes;
SELECT Content.id, Content.name, SUM(Content_Box.value) AS total_value FROM Content JOIN Content_Box ON Content.id = Content_Box.content_id JOIN Box ON Content_Box.box_id = Box.id GROUP BY Content.id, Content.name ORDER BY total_value DESC LIMIT 1;
SELECT MAX(weight) AS MaximumWeight, MIN(weight) AS MinimumWeight FROM Bikes;
SELECT id, type_code, name FROM products;
SELECT COUNT(*) FROM institutions WHERE founded_year BETWEEN 1850 AND 1900;
SELECT COUNT(*) FROM services;
SELECT player_name FROM players ORDER BY player_name ASC;
SELECT Districts.name FROM Districts JOIN GovernmentLinks ON Districts.id = GovernmentLinks.district_id WHERE GovernmentLinks.link LIKE '%.gov';
SELECT o.owner_name FROM Ownership o JOIN Document d ON o.document_id = d.document_id JOIN Collection c ON d.collection_id = c.collection_id WHERE c.collection_name = 'Braeden Collection';
SELECT painting_name FROM Paintings WHERE width < 600 OR height > 800;
SELECT title FROM Artworks WHERE type = 'oil painting' AND year_created > 1910;
SELECT COUNT(*) FROM properties WHERE parking_lots = 1 OR garages = 1;
SELECT Coordinates FROM Planets WHERE Planet_Name = 'Mars';
SELECT name, date FROM Exams WHERE subject_code NOT IN ( SELECT subject_code FROM Subjects WHERE subject_name = 'Database' );
SELECT COUNT(DISTINCT Comments.comment_text) AS num_unique_comments FROM Comments JOIN StudentAnswers ON Comments.student_answer_id = StudentAnswers.student_answer_id;
SELECT StudentAnswers.student_answer_id, COUNT(DISTINCT Comments.comment_text) AS num_unique_comments FROM Comments JOIN StudentAnswers ON Comments.student_answer_id = StudentAnswers.student_answer_id GROUP BY StudentAnswers.student_answer_id;
SELECT AVG(distance) AS average_distance, MIN(distance) AS min_distance, MAX(distance) AS max_distance FROM distances;
SELECT * FROM meetings;
SELECT * FROM meeting_types;
SELECT meeting_type, description, location FROM meetings;
SELECT model, class, construction FROM Headphones WHERE price = (SELECT MIN(price) FROM Headphones);
SELECT COUNT(DISTINCT d.student_id) as students_with_detention FROM Detentions d JOIN Students s ON d.student_id = s.id;
SELECT DISTINCT painting_name FROM paintings ORDER BY painting_name ASC;
SELECT COUNT(*) FROM players WHERE rank_of_year <= 3;
SELECT COUNT(*) FROM clients;
SELECT COUNT(client_id) FROM clients;
SELECT region_name FROM regions ORDER BY area DESC LIMIT 5;
SELECT DISTINCT theaters.theater_name FROM theaters JOIN movies_theaters ON theaters.theater_id = movies_theaters.theater_id JOIN movies ON movies_theaters.movie_id = movies.movie_id JOIN ratings ON movies.rating_id = ratings.rating_id WHERE ratings.rating_name IN ('G', 'PG');
SELECT AVG(value) AS AverageValue FROM Boxes;
SELECT * FROM agency;
SELECT id, name, address FROM agency;
SELECT sname, age FROM Sailors ORDER BY rating DESC;
SELECT Products.product_name, Products.weight FROM Products JOIN Categories ON Products.category_id = Categories.category_id WHERE Categories.category_name = 'bikes' ORDER BY Products.price ASC;
SELECT COUNT(*) AS total_papers FROM papers;
SELECT title FROM Books WHERE sale_price = ( SELECT MIN(sale_price) FROM Books );
SELECT * FROM Customers WHERE Name LIKE '%Kutch%';
SELECT DISTINCT payment_method_code FROM payments;
SELECT COUNT(*) FROM staff;
SELECT COUNT(*) FROM pilots WHERE age > 40;
SELECT COUNT(*) FROM pilots WHERE YEAR(CURRENT_DATE) - YEAR(date_of_birth) > 40;
SELECT Flavors.flavor_name FROM Flavors JOIN Cakes ON Flavors.flavor_id = Cakes.flavor_id WHERE Cakes.price > 10;
SELECT cities.city_name FROM cities JOIN states ON cities.state_id = states.state_id WHERE states.state_name = 'PA';
SELECT COUNT(*) FROM performances WHERE stage_presence_score < 7 OR stage_presence_score > 9;
SELECT DISTINCT name FROM Paintings ORDER BY LENGTH(name);
SELECT DISTINCT name FROM Paintings ORDER BY LENGTH(name) DESC;
SELECT Artist.FirstName, (Lifespan.DeathYear - Lifespan.BirthYear) AS Age FROM Artist JOIN Lifespan ON Artist.ArtistID = Lifespan.ArtistID ORDER BY (Lifespan.DeathYear - Lifespan.BirthYear) DESC LIMIT 1;
SELECT address, phone, email FROM customer WHERE first_name = 'Jeromy';
SELECT id, height FROM Paintings WHERE gallery_id = 240 ORDER BY width DESC LIMIT 1;
SELECT COUNT(DISTINCT content_id) AS different_contents FROM contents;
SELECT COUNT(*) FROM authors WHERE YEAR(CURDATE()) - YEAR(birthdate) < 30;
SELECT AVG(price) AS average_price FROM products;
SELECT p.player_name, COUNT(m.winner_id) as win_count FROM Players p LEFT JOIN Matches m ON p.player_id = m.winner_id GROUP BY p.player_name ORDER BY win_count ASC;
SELECT id, street, city, state, zip_code FROM Address;
SELECT Locations.location_name FROM Locations JOIN Paintings ON Locations.location_id = Paintings.location_id WHERE Paintings.year_created < 1885 OR Paintings.year_created > 1930;
SELECT clients.name, addresses.address FROM clients JOIN addresses ON clients.client_id = addresses.client_id ORDER BY clients.name ASC;
